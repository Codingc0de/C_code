#define _CRT_SECURE_NO_WARNINGS
#define A_LEN 10000
#include<stdio.h>
#include<string.h>

int a_size = 0;

void push(int a[]) {
	int num = 0;
	printf("정수를 입력해주세요 : ");
	scanf("%d", &num);
	a[a_size] = num;
	a_size += 1;
}

void pop(int a[]) {
	int num = a[0];
	for (int n = 0; n < a_size; n++) {
		a[n] = a[n + 1];
	}
	if (a_size<1) {
		printf("함수 pop의 값 : -1\n");
	}
	else {
		printf("큐에 가장 앞에 있는 값(pop) : %d\n", num);
	}
	a_size -= 1;
	if (a_size < 0) {
		a_size = 0;
	}
}

void size(int a[]) {
	int x = a_size;
	if (a[0] == NULL) {
		x = 0;
	}
	printf("큐에 있는 정수의 개수 : %d\n", x);
}

void empty(int a[]) {
	if (a_size > 0) {
		printf("함수 empty의 값 : 0\n");
	}
	else {
		printf("함수 empty의 값 : 1\n");
	}
}

void front(int a[]) {
	if (a_size < 1) {
		printf("함수 front의 값 : -1\n");
	}
	else {
		printf("큐에 가장 앞에 있는 값 : %d\n", a[0]);
	}
}

void back(int a[]) {
	if (a_size<1) {
		printf("함수 back의 값 : -1\n");
	}
	else {
		printf("큐에 가장 뒤에 값 : %d\n", a[a_size - 1]);
	}
}

int main(void) {

	int a[A_LEN] = { NULL };
	int num = 0;
	char text[] = "";

	printf("--프로그램 시작--\n\n");

	printf("명령어의 개수를 입력해주세요 : ");
	scanf("%d", &num);

	printf("명령어 목록\n");
	printf("1.push  : 큐에 값을 추가\n");
	printf("2.pop   : 큐에 가장 앞에 값을 삭제하고 삭제한 값을 출력한다 (큐에 값이 없다면 -1을 출력)\n");
	printf("3.size  : 큐에 들어있는 값의 개수를 출력\n");
	printf("4.empty : 큐가 비어있으면 1을 아니면 0을 출력\n");
	printf("5.front : 큐에 가장 앞에 있는 값을 출력 (큐에 값이 없으면 -1을 출력)\n");
	printf("5.back  : 큐에 가장 뒤에 있는 값을 출력 (큐에 값이 없으면 -1을 출력)\n");

	for (int n = 0; n < num; n++) {

		printf("\n명령어를 입력하세요 : ");
		scanf("%s", &text);

		if (strcmp(text,"push")==0) {
			printf("\npush\n");
			push(a);
		}
		else if (strcmp(text, "pop")==0) {
			printf("\npop\n");
			pop(a);
		}
		else if (strcmp(text, "size")==0) {
			printf("\nsize\n");
			size(a);
		}
		else if (strcmp(text, "empty")==0) {
			printf("\nempty\n");
			empty(a);
		}
		else if (strcmp(text, "front")==0) {
			printf("\nfront\n");
			front(a);
		}
		else if (strcmp(text, "back")==0) {
			printf("\nback\n");
			back(a);
		}
		else {
			printf("오류!! 프로그램을 종료합니다");
			return 0;
		}
	}

	printf("\n\n--프로그램 종료--");

	return 0;
}
